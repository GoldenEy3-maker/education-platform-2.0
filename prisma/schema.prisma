generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"

  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id             String         @id @default(cuid())
  name           String
  surname        String
  fathername     String?
  email          String?        @unique
  emailVerified  DateTime?
  image          String?
  login          String         @unique
  password       String
  tokenVersion   Int            @default(0)
  role           Role
  status         String?
  lessions       Lession[]
  createdCourses Course[]       @relation("author")
  subscriptions  Subscription[]
  favorites      Favorite[]
}

model Pavilion {
  id       String    @id @default(cuid())
  name     String
  address  String
  infoLink String
  mapLink  String
  lessions Lession[]
}

model Lession {
  id         String        @id @default(cuid())
  title      String
  start      DateTime
  end        DateTime
  classRoom  Int?
  pavilion   Pavilion?     @relation(fields: [pavilionId], references: [id])
  pavilionId String?
  type       LessionType
  teacher    User          @relation(fields: [teacherId], references: [id])
  teacherId  String
  status     LessionStatus
}

model Course {
  id          String         @id @default(cuid())
  title       String
  description String
  author      User           @relation("author", fields: [authorId], references: [id])
  authorId    String
  subscribers Subscription[]
  favoritedBy Favorite[]
  isArchived  Boolean        @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subscription {
  id String @id @default(cuid())

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  progress Int

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Favorite {
  id String @id @default(cuid())

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

enum Role {
  Student
  Admin
  Teacher
}

enum LessionStatus {
  Full
  Sync
  Async
}

enum LessionType {
  Lec
  Lab
  Pract
}
